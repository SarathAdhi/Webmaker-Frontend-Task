---
import { cn } from "@utils/tw-merge";

interface Props
  extends astroHTML.JSX.ButtonHTMLAttributes,
    VariantProps<typeof buttonVariants> {}

const { size, variant, ...props } = Astro.props;

import { cva, type VariantProps } from "class-variance-authority";

const buttonVariants = cva(
  "inline-flex items-center justify-center rounded-md text-base font-bold ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring focus-visible:ring-offset-1 disabled:pointer-events-none disabled:opacity-50",
  {
    variants: {
      variant: {
        default: "bg-primary text-primary-foreground hover:bg-primary/90",
        outline: "border border-input bg-background text-input hover:bg-accent",
      },
      size: {
        default: "h-10 px-10 py-4",
        sm: "h-9 rounded-md px-3",
        lg: "h-10 px-10 py-6",
      },
    },
    defaultVariants: {
      variant: "default",
      size: "default",
    },
  }
);
---

<button
  class={cn(buttonVariants({ variant, size, class: props.class }))}
  {...props}
>
  <slot />
</button>
